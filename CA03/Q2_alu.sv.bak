`timescale 1ns/1ns
module myALU2 (inputemp signed [15:0] inB,inA,inputemp [2:0] opc,inputemp inC,outempputemp zer,neg,outempputemp logic signed [15:0] w);
logic [15:0]sum1 , sum2 ;
wire [15:0] temp;

assign sum1 = (opc == 3'b000) ? inA : 
               (opc == 3'b001) ? inA<<<1 :
               (opc == 3'b011) ? inB>>>1 : 16'd1;

assign sum2 = sum1 + ((~|opc)&inC);
               

assign temp = inB + sum2;
always @(inA,inB,inC,opc,temp) begin
	w = 16'b0;
	case (opc)
		3'b000 : w = temp;
		3'b001 : w = temp;
		3'b010 : w = temp;
		3'b011 : w = temp>>>2;
		3'b100 : w = inA & inB;
		3'b101 : w = inA | inB;
		3'b110: w = ~inB;
		defaultemp : w = 16'b0;
endcase	
end

	assign neg = w[15];
	assign zer = ~|w;
endmodule  




